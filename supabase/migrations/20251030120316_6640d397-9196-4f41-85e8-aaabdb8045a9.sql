-- Create pages_content table for page titles and metadata
CREATE TABLE public.pages_content (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  page_key TEXT UNIQUE NOT NULL,
  title TEXT NOT NULL,
  subtitle TEXT,
  content JSONB DEFAULT '{}'::jsonb,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- Create services table for home page cards
CREATE TABLE public.services (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  title TEXT NOT NULL,
  description TEXT NOT NULL,
  icon_name TEXT NOT NULL,
  action_label TEXT,
  action_path TEXT,
  display_order INTEGER NOT NULL DEFAULT 0,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- Create trainings table
CREATE TABLE public.trainings (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  emoji TEXT NOT NULL DEFAULT 'üìö',
  title TEXT NOT NULL,
  subtitle TEXT,
  description TEXT NOT NULL,
  display_order INTEGER NOT NULL DEFAULT 0,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- Create courses table
CREATE TABLE public.courses (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  emoji TEXT NOT NULL DEFAULT 'üìñ',
  title TEXT NOT NULL,
  subtitle TEXT,
  description TEXT NOT NULL,
  display_order INTEGER NOT NULL DEFAULT 0,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- Create benefits table
CREATE TABLE public.benefits (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  description TEXT NOT NULL,
  display_order INTEGER NOT NULL DEFAULT 0,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- Create about_sections table
CREATE TABLE public.about_sections (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  section_key TEXT UNIQUE NOT NULL,
  title TEXT NOT NULL,
  description TEXT NOT NULL,
  icon_name TEXT NOT NULL,
  display_order INTEGER NOT NULL DEFAULT 0,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- Create monitoring_services table
CREATE TABLE public.monitoring_services (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  emoji TEXT NOT NULL DEFAULT 'üîç',
  title TEXT NOT NULL,
  subtitle TEXT,
  description TEXT NOT NULL,
  display_order INTEGER NOT NULL DEFAULT 0,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- Create medicine_services table
CREATE TABLE public.medicine_services (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  section_type TEXT NOT NULL, -- 'document' or 'exam'
  title TEXT NOT NULL,
  display_order INTEGER NOT NULL DEFAULT 0,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- Enable RLS on all tables
ALTER TABLE public.pages_content ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.services ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.trainings ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.courses ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.benefits ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.about_sections ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.monitoring_services ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.medicine_services ENABLE ROW LEVEL SECURITY;

-- RLS Policies for pages_content
CREATE POLICY "Anyone can view pages content" ON public.pages_content FOR SELECT USING (true);
CREATE POLICY "Only admins can insert pages content" ON public.pages_content FOR INSERT WITH CHECK (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can update pages content" ON public.pages_content FOR UPDATE USING (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can delete pages content" ON public.pages_content FOR DELETE USING (has_role(auth.uid(), 'admin'));

-- RLS Policies for services
CREATE POLICY "Anyone can view services" ON public.services FOR SELECT USING (true);
CREATE POLICY "Only admins can insert services" ON public.services FOR INSERT WITH CHECK (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can update services" ON public.services FOR UPDATE USING (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can delete services" ON public.services FOR DELETE USING (has_role(auth.uid(), 'admin'));

-- RLS Policies for trainings
CREATE POLICY "Anyone can view trainings" ON public.trainings FOR SELECT USING (true);
CREATE POLICY "Only admins can insert trainings" ON public.trainings FOR INSERT WITH CHECK (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can update trainings" ON public.trainings FOR UPDATE USING (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can delete trainings" ON public.trainings FOR DELETE USING (has_role(auth.uid(), 'admin'));

-- RLS Policies for courses
CREATE POLICY "Anyone can view courses" ON public.courses FOR SELECT USING (true);
CREATE POLICY "Only admins can insert courses" ON public.courses FOR INSERT WITH CHECK (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can update courses" ON public.courses FOR UPDATE USING (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can delete courses" ON public.courses FOR DELETE USING (has_role(auth.uid(), 'admin'));

-- RLS Policies for benefits
CREATE POLICY "Anyone can view benefits" ON public.benefits FOR SELECT USING (true);
CREATE POLICY "Only admins can insert benefits" ON public.benefits FOR INSERT WITH CHECK (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can update benefits" ON public.benefits FOR UPDATE USING (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can delete benefits" ON public.benefits FOR DELETE USING (has_role(auth.uid(), 'admin'));

-- RLS Policies for about_sections
CREATE POLICY "Anyone can view about sections" ON public.about_sections FOR SELECT USING (true);
CREATE POLICY "Only admins can insert about sections" ON public.about_sections FOR INSERT WITH CHECK (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can update about sections" ON public.about_sections FOR UPDATE USING (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can delete about sections" ON public.about_sections FOR DELETE USING (has_role(auth.uid(), 'admin'));

-- RLS Policies for monitoring_services
CREATE POLICY "Anyone can view monitoring services" ON public.monitoring_services FOR SELECT USING (true);
CREATE POLICY "Only admins can insert monitoring services" ON public.monitoring_services FOR INSERT WITH CHECK (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can update monitoring services" ON public.monitoring_services FOR UPDATE USING (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can delete monitoring services" ON public.monitoring_services FOR DELETE USING (has_role(auth.uid(), 'admin'));

-- RLS Policies for medicine_services
CREATE POLICY "Anyone can view medicine services" ON public.medicine_services FOR SELECT USING (true);
CREATE POLICY "Only admins can insert medicine services" ON public.medicine_services FOR INSERT WITH CHECK (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can update medicine services" ON public.medicine_services FOR UPDATE USING (has_role(auth.uid(), 'admin'));
CREATE POLICY "Only admins can delete medicine services" ON public.medicine_services FOR DELETE USING (has_role(auth.uid(), 'admin'));

-- Create triggers for updated_at
CREATE TRIGGER update_pages_content_updated_at BEFORE UPDATE ON public.pages_content FOR EACH ROW EXECUTE FUNCTION public.update_updated_at();
CREATE TRIGGER update_services_updated_at BEFORE UPDATE ON public.services FOR EACH ROW EXECUTE FUNCTION public.update_updated_at();
CREATE TRIGGER update_trainings_updated_at BEFORE UPDATE ON public.trainings FOR EACH ROW EXECUTE FUNCTION public.update_updated_at();
CREATE TRIGGER update_courses_updated_at BEFORE UPDATE ON public.courses FOR EACH ROW EXECUTE FUNCTION public.update_updated_at();
CREATE TRIGGER update_benefits_updated_at BEFORE UPDATE ON public.benefits FOR EACH ROW EXECUTE FUNCTION public.update_updated_at();
CREATE TRIGGER update_about_sections_updated_at BEFORE UPDATE ON public.about_sections FOR EACH ROW EXECUTE FUNCTION public.update_updated_at();
CREATE TRIGGER update_monitoring_services_updated_at BEFORE UPDATE ON public.monitoring_services FOR EACH ROW EXECUTE FUNCTION public.update_updated_at();
CREATE TRIGGER update_medicine_services_updated_at BEFORE UPDATE ON public.medicine_services FOR EACH ROW EXECUTE FUNCTION public.update_updated_at();

-- Seed initial data for services (Home page)
INSERT INTO public.services (title, description, icon_name, action_label, action_path, display_order) VALUES
  ('Consultoria Anual', 'Servi√ßo completo de assessoria em seguran√ßa e medicina do trabalho com suporte cont√≠nuo durante todo o ano.', 'HeartHandshake', 'Ver vantagens', '/vantagens', 1),
  ('Treinamentos', 'Cursos e capacita√ß√µes em seguran√ßa do trabalho, ministrados por profissionais especializados.', 'GraduationCap', 'Ver treinamentos', '/treinamentos', 2),
  ('Cursos', 'Forma√ß√£o profissional em diversas √°reas da seguran√ßa e sa√∫de ocupacional.', 'BookOpen', 'Ver cursos', '/cursos', 3),
  ('Monitoramento', 'Servi√ßos de medi√ß√£o e controle de agentes ambientais no ambiente de trabalho.', 'Activity', 'Saiba mais', '/monitoramento', 4),
  ('Medicina do Trabalho', 'Exames ocupacionais e acompanhamento m√©dico especializado.', 'Stethoscope', 'Saiba mais', '/medicina', 5),
  ('Sobre N√≥s', 'Conhe√ßa nossa hist√≥ria, miss√£o e valores que guiam nosso trabalho.', 'Users', 'Conhe√ßa', '/sobre', 6),
  ('Contato', 'Entre em contato conosco para tirar d√∫vidas ou solicitar or√ßamento.', 'Phone', 'Fale conosco', '/contato', 7);

-- Seed trainings data
INSERT INTO public.trainings (emoji, title, subtitle, description, display_order) VALUES
  ('üî•', 'Brigada de Inc√™ndio', 'NR 23', 'Capacita√ß√£o para forma√ß√£o de brigadas de combate a inc√™ndio e situa√ß√µes de emerg√™ncia.', 1),
  ('‚ö°', 'NR 10', 'Seguran√ßa em Instala√ß√µes El√©tricas', 'Treinamento obrigat√≥rio para trabalhos com eletricidade.', 2),
  ('üèóÔ∏è', 'NR 35', 'Trabalho em Altura', 'Capacita√ß√£o para atividades acima de 2 metros do n√≠vel inferior.', 3),
  ('üîí', 'NR 33', 'Espa√ßo Confinado', 'Treinamento para trabalhos em ambientes confinados.', 4),
  ('üöú', 'NR 11', 'Operador de Empilhadeira', 'Forma√ß√£o para opera√ß√£o segura de empilhadeiras.', 5),
  ('üè•', 'Primeiros Socorros', 'Atendimento de Emerg√™ncia', 'Capacita√ß√£o em procedimentos b√°sicos de primeiros socorros.', 6),
  ('‚ö†Ô∏è', 'CIPA', 'Comiss√£o Interna de Preven√ß√£o', 'Treinamento para membros da CIPA.', 7);

-- Seed courses data
INSERT INTO public.courses (emoji, title, subtitle, description, display_order) VALUES
  ('üë∑', 'T√©cnico em Seguran√ßa do Trabalho', 'Forma√ß√£o Completa', 'Curso t√©cnico completo com certifica√ß√£o reconhecida pelo MEC.', 1),
  ('üéì', 'Engenharia de Seguran√ßa do Trabalho', 'P√≥s-gradua√ß√£o', 'Especializa√ß√£o para engenheiros e arquitetos.', 2),
  ('‚öôÔ∏è', 'Ergonomia', 'An√°lise e Preven√ß√£o', 'Curso sobre an√°lise ergon√¥mica do trabalho e preven√ß√£o de LER/DORT.', 3),
  ('üß™', 'Higiene Ocupacional', 'Agentes Qu√≠micos e F√≠sicos', 'Forma√ß√£o em identifica√ß√£o e controle de riscos ambientais.', 4),
  ('üìã', 'Auditor Interno', 'ISO 45001', 'Capacita√ß√£o para auditoria de sistemas de gest√£o de SST.', 5),
  ('üî¨', 'Toxicologia Ocupacional', 'Riscos Qu√≠micos', 'Curso sobre exposi√ß√£o e efeitos de agentes qu√≠micos.', 6),
  ('üè≠', 'Gest√£o de Seguran√ßa', 'Processos Industriais', 'Forma√ß√£o em gest√£o de seguran√ßa em ambientes industriais.', 7),
  ('üìä', 'Per√≠cia em Seguran√ßa', 'Laudo T√©cnico', 'Curso para elabora√ß√£o de laudos e per√≠cias t√©cnicas.', 8);

-- Seed benefits data
INSERT INTO public.benefits (description, display_order) VALUES
  ('Elabora√ß√£o e implementa√ß√£o do PCMSO (Programa de Controle M√©dico de Sa√∫de Ocupacional)', 1),
  ('Desenvolvimento do PGR (Programa de Gerenciamento de Riscos)', 2),
  ('Treinamentos obrigat√≥rios (NR10, NR35, NR33, etc.)', 3),
  ('Suporte na forma√ß√£o e treinamento da CIPA', 4),
  ('Assessoria jur√≠dica trabalhista especializada', 5),
  ('Elabora√ß√£o de laudos t√©cnicos (LTCAT, PPP, PPRA)', 6),
  ('Acompanhamento de fiscaliza√ß√µes do Minist√©rio do Trabalho', 7),
  ('Gest√£o de exames ocupacionais (admissional, peri√≥dico, demissional)', 8),
  ('Sistema online para gest√£o de documentos e certificados', 9),
  ('Atendimento presencial e remoto com profissionais qualificados', 10);

-- Seed about sections data
INSERT INTO public.about_sections (section_key, title, description, icon_name, display_order) VALUES
  ('mission', 'Nossa Miss√£o', 'Promover a seguran√ßa e sa√∫de no ambiente de trabalho atrav√©s de solu√ß√µes inovadoras e eficazes, contribuindo para o bem-estar dos trabalhadores e o sucesso das empresas.', 'Target', 1),
  ('vision', 'Nossa Vis√£o', 'Ser refer√™ncia nacional em consultoria de seguran√ßa do trabalho, reconhecida pela excel√™ncia t√©cnica e compromisso com a preven√ß√£o de acidentes.', 'Eye', 2),
  ('values', 'Nossos Valores', 'Comprometimento com a vida, √©tica profissional, inova√ß√£o constante, respeito √†s pessoas e responsabilidade socioambiental.', 'Heart', 3),
  ('differential', 'Nosso Diferencial', 'Equipe multidisciplinar altamente qualificada, atendimento personalizado, tecnologia de ponta e acompanhamento cont√≠nuo das normas regulamentadoras.', 'Award', 4);

-- Seed monitoring services data
INSERT INTO public.monitoring_services (emoji, title, subtitle, description, display_order) VALUES
  ('üîä', 'Ru√≠do Ocupacional', 'NR-15 Anexo I', 'Avalia√ß√£o quantitativa dos n√≠veis de ru√≠do no ambiente de trabalho.', 1),
  ('üå°Ô∏è', 'Calor', 'NR-15 Anexo III', 'Medi√ß√£o de temperatura e umidade para avalia√ß√£o de sobrecarga t√©rmica.', 2),
  ('üí®', 'Agentes Qu√≠micos', 'NR-15 Anexo XI', 'An√°lise de concentra√ß√£o de gases e vapores no ar.', 3),
  ('üí°', 'Ilumin√¢ncia', 'NBR ISO/CIE 8995-1', 'Medi√ß√£o dos n√≠veis de ilumina√ß√£o nos postos de trabalho.', 4),
  ('‚ö°', 'Radia√ß√µes Ionizantes', 'NR-15 Anexo V', 'Monitoramento de exposi√ß√£o a radia√ß√µes ionizantes.', 5),
  ('üì°', 'Radia√ß√µes N√£o Ionizantes', 'NR-15 Anexo VII', 'Avalia√ß√£o de campos eletromagn√©ticos e radia√ß√£o UV.', 6);

-- Seed medicine services data
INSERT INTO public.medicine_services (section_type, title, display_order) VALUES
  ('document', 'PCMSO - Programa de Controle M√©dico de Sa√∫de Ocupacional', 1),
  ('document', 'PGR - Programa de Gerenciamento de Riscos', 2),
  ('document', 'LTCAT - Laudo T√©cnico das Condi√ß√µes Ambientais do Trabalho', 3),
  ('document', 'PPP - Perfil Profissiogr√°fico Previdenci√°rio', 4),
  ('exam', 'Exame Admissional', 1),
  ('exam', 'Exame Peri√≥dico', 2),
  ('exam', 'Exame Demissional', 3),
  ('exam', 'Exame de Retorno ao Trabalho', 4),
  ('exam', 'Exame de Mudan√ßa de Fun√ß√£o', 5),
  ('exam', 'Audiometria', 6),
  ('exam', 'Acuidade Visual', 7),
  ('exam', 'Espirometria', 8);

-- Seed pages content data
INSERT INTO public.pages_content (page_key, title, subtitle) VALUES
  ('home', 'Seguran√ßa e Sa√∫de no Trabalho', 'Protegendo vidas, construindo futuros mais seguros'),
  ('about', 'Sobre a EVITARE', 'Conhe√ßa nossa hist√≥ria e nossos valores'),
  ('benefits', 'Vantagens da Consultoria Anual', 'Tenha o suporte completo que sua empresa precisa'),
  ('trainings', 'Treinamentos Especializados', 'Capacita√ß√£o profissional em seguran√ßa do trabalho'),
  ('courses', 'Cursos Profissionalizantes', 'Forma√ß√£o completa nas √°reas de seguran√ßa e sa√∫de ocupacional'),
  ('monitoring', 'Monitoramento Ocupacional', 'Avalia√ß√£o e controle de agentes ambientais'),
  ('medicine', 'Medicina e Seguran√ßa do Trabalho', 'Servi√ßos completos de sa√∫de ocupacional'),
  ('contact', 'Entre em Contato', 'Estamos prontos para atender sua empresa');